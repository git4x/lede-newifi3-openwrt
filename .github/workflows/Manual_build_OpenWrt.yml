name: Manual build

on:
  watch:
    types: started

env:
  CONFIG_FILE: .config
  FEEDS_CONF: feeds.conf.default
  DIY_P1_SH: diy-part1.sh
  TZ: Asia/Shanghai
  SSH_ACTIONS: true
  UPLOAD_COWTRANSFER: true

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get update
        sudo -E apt-get install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get clean
        sudo timedatectl set-timezone Asia/Shanghai
       
    - name: Clone OpenWRT source code
      run: |
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        git clone https://github.com/silmace/lede.git openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
     
    - name: Run Before-Update-Feeds Script
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update & Install Feeds
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    
    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')
          
    - name: Download package
      run: |
        cd openwrt
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      run: |
        cd openwrt
        make -j1 V=s
      
    - name: Upload firmware to cowtransfer
      run: |
        cd openwrt/bin/targets/ramips/mt7621
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

